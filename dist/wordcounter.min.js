/*!
 * Word Counter v0.0.2
 * https://github.com/fengyuanchen/wordcounter
 *
 * Copyright 2014-2015 Fengyuan Chen
 * Released under the MIT license
 *
 * Date: 2015-01-21T13:57:36.212Z
 */
!function(){"use strict";var t,n=function(o){this.options=t.extend({},n.DEFAULTS),this.setup(o),this.source="",this.result=null},o=[].slice,r=[].indexOf,e={}.toString;n.DEFAULTS={mincount:1,minlength:1,report:!0,ignore:[]},n.prototype={constructor:n,setup:function(n){"object"==typeof n&&t.extend(this.options,n)},count:function(n,o){var r,e=this.options,i=[],u=[];if("string"!=typeof n)throw new Error("First argument must be a string");return this.source=n,r=n.match(/\b\w+(-\w+)*\b/g),r&&(t.each(r,function(n){var o;n.length<e.minlength||-1!==t.inArray(n,e.ignore)||(t.each(u,function(t){return t.word===n?(o=!0,t.count+=1,!1):void 0}),o||u.push({word:n,count:1}))}),t.each(u,function(t){t.count>=e.mincount&&i.push(t)}),i=i.sort(function(t,n){var o=n.count-t.count;return 0===o&&(o=[t.word,n.word].sort().shift()===t.word?-1:1),o})),this.result=i,this.logs=this.format(i),e.report&&"undefined"!=typeof console&&console.log(this.logs),"function"==typeof o&&o.call(this,i,this.logs),i},format:function(n){var o=n.length.toString().length,r=[];return t.each(n,function(t,n){for(var e=++n,i=[],u=o-e.toString().length;u-->0;)i.push(" ");r.push(i.join("")+e+"> "+t.word+": "+t.count)}),r.join("\n")}},t={isArray:Array.isArray||function(t){return"[object Array]"===e.call(t)},toArray:function(t,n,r){var e=[];return"number"==typeof n&&(e.push(n),"number"==typeof r&&e.push(r)),o.apply(t,e)},inArray:function(n,o,e){var i,u;if(t.isArray(o)){if(r)return r.call(o,n,e);for(i=o.length,u=e?0>e?Math.max(0,i+e):e:0;i>u;u++)if(o[u]===n)return u}return-1},each:function(n,o){var r,e;if("function"==typeof o)if(t.isArray(n))for(e=0,r=n.length;r>e&&o.call(n,n[e],e)!==!1;e++);else if("object"==typeof n)for(e in n)if(n.hasOwnProperty(e)&&o.call(n,n[e],e)===!1)break;return n},extend:function(n){var o=t.toArray(arguments);return o.length>1?o.shift():n=this,t.each(o,function(o){t.each(o,function(t,o){n[o]=t})}),n}},t.extend(n.prototype,t),"undefined"!=typeof window&&(window.WordCounter=n),"function"==typeof define&&define.amd&&define("wordcounter",[],function(){return n}),"object"==typeof module&&(module.exports=n)}();