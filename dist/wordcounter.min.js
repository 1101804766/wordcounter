/*!
 * Word Counter v0.0.1
 * https://github.com/fengyuanchen/wordcounter
 *
 * Copyright 2014 Fengyuan Chen
 * Released under the MIT license
 *
 * Date: 2014-12-05T11:18:28.609Z
 */
!function(){"use strict";var t,n="undefined"!=typeof n?n:{log:function(){}},r=function(n){this.defaults=t.extend({},r.DEFAULTS,n),this.source="",this.result=null},o=[],e=o.slice,i=o.indexOf,u={}.toString;r.DEFAULTS={mincount:1,minlength:1,report:!0,ignore:[]},r.prototype={constructor:r,setup:function(n){"object"==typeof n&&t.extend(this.defaults,n)},count:function(r,o){var e,i=this.defaults,u=[],f=[];if("string"!=typeof r)throw new Error("first argument must be a string");return this.source=r,e=r.match(/\b\w+(-\w+)*\b/g),e&&(t.each(e,function(n){var r;n.length<i.minlength||-1!==t.inArray(n,i.ignore)||(t.each(f,function(t){return t.word===n?(r=!0,t.count+=1,!1):void 0}),r||f.push({word:n,count:1}))}),t.each(f,function(t){t.count>=i.mincount&&u.push(t)}),u=u.sort(function(t,n){var r=n.count-t.count;return 0===r&&(r=[t.word,n.word].sort().shift()===t.word?-1:1),r})),this.result=u,this.logs=this.format(u),i.report&&n.log(this.logs),"function"==typeof o&&o.call(this,u,this.logs),u},format:function(n){var r=n.length.toString().length,o=[];return t.each(n,function(t,n){for(var e=++n,i=[],u=r-e.toString().length;u-->0;)i.push(" ");o.push(i.join("")+e+"> "+t.word+": "+t.count)}),o.join("\n")}},t={isArray:Array.isArray||function(t){return"[object Array]"===u.call(t)},toArray:function(t,n,r){var o=[];return"number"==typeof n&&(o.push(n),"number"==typeof r&&o.push(r)),e.apply(t,o)},inArray:function(n,r,o){var e,u;if(t.isArray(r)){if(i)return i.call(r,n,o);for(e=r.length,u=o?0>o?Math.max(0,e+o):o:0;e>u;u++)if(r[u]===n)return u}return-1},each:function(n,r){var o,e;if("function"==typeof r)if(t.isArray(n))for(e=0,o=n.length;o>e&&r.call(n,n[e],e)!==!1;e++);else if("object"==typeof n)for(e in n)if(n.hasOwnProperty(e)&&r.call(n,n[e],e)===!1)break;return n},extend:function(n){var r=t.toArray(arguments);return r.length>1?r.shift():n=this,t.each(r,function(r){t.each(r,function(t,r){n[r]=t})}),n}},t.extend(r.prototype,t),"undefined"!=typeof window&&(window.WordCounter=r),"function"==typeof define&&define.amd&&define("htmlcomb",[],function(){return r}),"object"==typeof module&&(module.exports=r)}();